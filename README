LongFromString converts a string to a long, without using 
the most direct built in Java functions.

Steve Baker Beepscore LLC 4 Dec 2010

//////////////
Specification:
1) Given a String, write a routine that converts the string to an long, 
without using the built in Java functions that would do this.
Describe what (if any) limitations the code has.  For example:

long StringToLong(String s)
{
        /* code goes here to convert a string to a long */
}

void Test()
{
   long i = StringToLong("123");
   if (i == 123)
       ... success ...
   else
       ... failure ...
}
///////////

Limitations:
The input string must be encoded in UTF-16 format used by Java.
The program can't reliably read input in encodings it doesn't support.
Reference: http://download.oracle.com/javase/tutorial/i18n/text/convertintro.html
http://en.wikipedia.org/wiki/Utf-16

Input must not contain Unicode supplementary characters.
Other human languages use different characters for numbers (e.g. Chinese digits)
Do we want to support non-Arabic numerals?
It appears that in China, Arabic numerals are now common.
Reference: http://en.wikipedia.org/wiki/Chinese_numerals

If the program recognizes an error, it returns a negative number.
The tests show several types of inputs that will return an error.

TODO:  Replace error handling from return negative values to using checked exceptions.
Ref http://java.sun.com/docs/books/jls/second_edition/html/exceptions.doc.html

The program should have input validation to protect against accidental or malicious bad input.
For example, filter out illegal characters.
The program limits input string length.

Input must be a whole number. "." is rejected as a non-digit
Input must be non-negative.  "-" is rejected as a non-digit.

Input should be base 10 digits 0-9.
The program doesn't support other bases such as binary or octal or hexadecimal. 

The program can't convert a string that represents a number larger than
the maximum type "long" can hold.
Long.MAX_VALUE = 9,223,372,036,854,775,807

Java uses JVM, Android uses Dalvik VM.
I think type long does not vary by platform or virtual machine.
For example, is long shorter on an Android phone than on Mac OSX?
"The long data type is a 64-bit signed two's complement integer.
It has a minimum value of -9,223,372,036,854,775,808 and 
a maximum value of 9,223,372,036,854,775,807 (inclusive)."

Ref: http://download.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html
http://developer.android.com/reference/java/lang/Long.html

